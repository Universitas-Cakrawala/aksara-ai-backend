version: '3.8'

services:
  # Main application
  aksara-ai-backend:
    build:
      context: .
      dockerfile: Dockerfile
    image: aksara-ai-backend:latest
    container_name: aksara-ai-backend
    restart: unless-stopped
    ports:
      - "8000:8000"
    env_file:
      - .env  # Load environment variables from .env file
    depends_on:
      - postgres
      - mongodb
    networks:
      - aksara-network
    volumes:
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: aksara-postgres
    restart: unless-stopped
    env_file:
      - .env  # Load environment variables from .env file
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - aksara-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d aksara_ai_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  # MongoDB Database
  mongodb:
    image: mongo:7-jammy
    container_name: aksara-mongodb
    restart: unless-stopped
    env_file:
      - .env  # Load environment variables from .env file
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d
    networks:
      - aksara-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local
  mongodb_data:
    driver: local

networks:
  aksara-network:
    driver: bridge

